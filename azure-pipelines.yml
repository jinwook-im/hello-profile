trigger:
- main

pool: Default

variables:
  imageName: 'bluegreen'
  dockerRegistryServiceConnection: 'testdockergin'
  imageRepository: 'bluegreen'
  containerRegistry: 'testdockergin.azurecr.io'
  tag: '$(Build.BuildId)'


#### CI
stages:
- stage: Build
  displayName: Build Devops base image
  jobs:
  - job: Build_and_Push
    steps:
    - task: JavaToolInstaller@0
      inputs:
        versionSpec: "18"
        jdkArchitectureOption: x64
        jdkSourceOption: LocalDirectory
        jdkFile: "C:\\\\Users\\jinwookim\\Downloads\\zulu-18.zip"
        jdkDestinationDirectory: "C:\\\\Users\\jinwookim\\Downloads\\zulu"
        cleanDestinationDirectory: true
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean package'
        options: '-P blue'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.18'
        mavenVersionOption: 'Default'
        mavenDirectory: 'C:\Program Files\maven\apache-maven-3.9.3'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: Docker@2
      displayName: Build and Push image
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageName)
        command: buildAndPush
        Dockerfile: Dockerfile
        tags: |
          $(tag)

### CD
- stage: DeployCanary
  displayName: Deploy canary
  dependsOn: Build
  condition: succeeded()

  jobs:
    - deployment: Deploycanary
      displayName: Deploy canary
      pool:
        vmImage: Default
      environment: 'test-env'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: KubernetesManifest@0
                displayName: Create imagePullSecret
                inputs:
                  action: createSecret
                  secretName: azure-pipelines-canary-k8s
                  dockerRegistryEndpoint: bluegreen

              - task: KubernetesManifest@0
                displayName: Deploy to Kubernetes cluster
                inputs:
                  action: 'deploy'
                  strategy: 'canary'
                  percentage: '25'
                  manifests: |
                    $(Pipeline.Workspace)/manifests-canary/deployment-blue.yml
                    $(Pipeline.Workspace)/manifests-canary/service-blue.yml
                  containers: '$(containerRegistry)/$(imageRepository):$(tag)'
                  imagePullSecrets: azure-pipelines-canary-k8s
- stage: PromoteRejectCanary
  displayName: Promote or Reject canary
  dependsOn: DeployCanary
  condition: succeeded()

  jobs:
    - deployment: PromoteCanary
      displayName: Promote Canary
      pool:
        vmImage: Default
      environment: 'test-env'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: KubernetesManifest@0
                displayName: promote canary
                inputs:
                  action: 'promote'
                  strategy: 'canary'
                  manifests: '$(Pipeline.Workspace)/manifests-canary/*'
                  containers: '$(containerRegistry)/$(imageRepository):$(tag)'
                  imagePullSecrets: '$(imagePullSecret)'
- stage: RejectCanary
  displayName: Reject canary
  dependsOn: PromoteRejectCanary
  condition: failed()

  jobs:
    - deployment: RejectCanary
      displayName: Reject Canary
      pool:
        vmImage: Default
      environment: 'test-env'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: KubernetesManifest@0
                displayName: reject canary
                inputs:
                  action: 'reject'
                  strategy: 'canary'
                  manifests: '$(Pipeline.Workspace)/manifests-canary/*'