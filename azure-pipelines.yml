trigger:
- dev

pool: jw-home

variables:
  imageName: 'hello-gin'
  dockerRegistryServiceConnection: 'acr-for-canary'
  imageRepository: 'hello-gin'
  containerRegistry: 'registryforadopoc.azurecr.io'
  tag: '$(Build.BuildId)'


#### CI
stages:
- stage: Build
  displayName: Build Devops base image
  jobs:
  - job: Build_and_Push
    steps:
    - task: JavaToolInstaller@0
      inputs:
        versionSpec: "18"
        jdkArchitectureOption: x64
        jdkSourceOption: LocalDirectory
        jdkFile: "C:\\\\Users\\jinwookim\\Downloads\\zulu-19.zip"
        jdkDestinationDirectory: "C:\\\\Users\\jinwookim\\Downloads\\zulu"
        cleanDestinationDirectory: true
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean package'
        options: '-P blue'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.18'
        mavenVersionOption: 'Default'
        mavenDirectory: 'C:\Program Files\maven\apache-maven-3.9.3'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: Docker@2
      displayName: Build and Push image
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageName)
        command: buildAndPush
        Dockerfile: Dockerfile
        tags: |
          $(tag)
